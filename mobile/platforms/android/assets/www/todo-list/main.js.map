{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/app-component/app.component.css","webpack:///./src/app/components/app-component/app.component.html","webpack:///./src/app/components/app-component/app.component.ts","webpack:///./src/app/components/chat/chat.component.css","webpack:///./src/app/components/chat/chat.component.html","webpack:///./src/app/components/chat/chat.component.ts","webpack:///./src/app/components/db-character-detail/db-character-detail.component.css","webpack:///./src/app/components/db-character-detail/db-character-detail.component.html","webpack:///./src/app/components/db-character-detail/db-character-detail.component.ts","webpack:///./src/app/components/db-character/db-character.component.css","webpack:///./src/app/components/db-character/db-character.component.html","webpack:///./src/app/components/db-character/db-character.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/todo-list/todo-list.component.css","webpack:///./src/app/components/todo-list/todo-list.component.html","webpack:///./src/app/components/todo-list/todo-list.component.ts","webpack:///./src/app/services/auth.guard.ts","webpack:///./src/app/services/auth.services.ts","webpack:///./src/app/services/character.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACwB;AACS;AACoB;AACxC;AAClB;AACqB;AAGvE,IAAM,MAAM,GAAW;IAErB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,WAAW;QACvB,SAAS,EAAE,MAAM;KAClB;IAED;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2FAAiB;QAC5B,WAAW,EAAE,CAAC,8DAAS,CAAC;KACzB;IAED;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,oGAAoB;KAChC;IAED;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,wHAA0B;KACtC;IAED;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,gFAAc;KAC1B;IAED;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,oFAAa;KACzB;CAEF;AAQD;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAN5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;aAC7B;YACD,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpD6B;AACjB;AACI;AAEW;AAEgB;AACO;AACvB;AACgC;AACxB;AAC4C;AAC7B;AACrC;AACS;AACiB;AAClB;AACK;AACU;AACP;AAuB1D;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oFAAY;gBACZ,2FAAiB;gBACjB,oGAAoB;gBACpB,wHAA0B;gBAC1B,iFAAc;gBACd,8EAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,oEAAgB;gBAChB,qEAAgB;gBAChB,6FAAuB;gBACvB,wDAAY,CAAC,OAAO,EAAE;gBACtB,iEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,4EAAgB,EAAE,+DAAS,EAAE,oEAAW,EAAE,uEAAa,CAAC;YACpE,SAAS,EAAE,CAAC,oFAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1CtB,mB;;;;;;;;;;;ACAA,iIAAiI,kBAAkB,yBAAyB,oBAAoB,mBAAmB,kBAAkB,0sB;;;;;;;;;;;;;;;;;;;;;;;;;ACA3L;AACkB;AAQ5D;IAIE,sBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAE9C,UAAK,GAAG,iBAAiB,CAAC;QAG1B,cAAS,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;IALG,CAAC;IAJxC,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKkC,oEAAY;OAJnC,YAAY,CAYxB;IAAD,mBAAC;CAAA;AAZwB;;;;;;;;;;;;ACTzB,gCAAgC,gBAAgB,iBAAiB,kBAAkB,mBAAmB,KAAK,2CAA2C,iBAAiB,mBAAmB,KAAK,uFAAuF,gBAAgB,iCAAiC,uBAAuB,mBAAmB,KAAK,iFAAiF,uBAAuB,kBAAkB,uBAAuB,oBAAoB,yBAAyB,mBAAmB,uBAAuB,uBAAuB,KAAK,8FAA8F,wBAAwB,KAAK,uFAAuF,uBAAuB,oBAAoB,yBAAyB,mBAAmB,uBAAuB,KAAK,oGAAoG,wBAAwB,KAAK,8FAA8F,gCAAgC,KAAK,6FAA6F,0BAA0B,gBAAgB,iCAAiC,yBAAyB,2BAA2B,KAAK,uHAAuH,gCAAgC,mDAAmD,KAAK,iHAAiH,gCAAgC,kBAAkB,KAAK,uHAAuH,6BAA6B,mDAAmD,KAAK,8FAA8F,0BAA0B,KAAK,4CAA4C,oBAAoB,uBAAuB,oBAAoB,KAAK,yEAAyE,uBAAuB,yBAAyB,+CAA+C,sBAAsB,oBAAoB,KAAK,2EAA2E,sBAAsB,6BAA6B,KAAK,+EAA+E,kBAAkB,sBAAsB,KAAK,2FAA2F,qBAAqB,KAAK,6FAA6F,sBAAsB,2BAA2B,KAAK,wFAAwF,sBAAsB,2BAA2B,KAAK,yGAAyG,wBAAwB,KAAK,6FAA6F,mBAAmB,KAAK,4BAA4B,mBAAmB,KAAK,C;;;;;;;;;;;ACA/2G,gzBAAgzB,kEAAkE,oLAAoL,uDAAuD,8GAA8G,gBAAgB,iHAAiH,oBAAoB,eAAe,oEAAoE,oCAAoC,s9B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr6C;AACY;AAClC;AAO5B;IAQE,uBAAoB,cAA6B;QAA7B,mBAAc,GAAd,cAAc,CAAe;QALjD,WAAM,GAAW,uDAAuD,CAAC;QACzE,iBAAY,GAAY,KAAK,CAAC;IAIuB,CAAC;IAEtD,gCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAExB,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAC,GAAQ;YAClD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACT,CAAC;IAED,mCAAW,GAAX;QACE,IAAM,OAAO,GAAG;YACd,IAAI,EAAE,IAAI,CAAC,WAAW;YACtB,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE;YAChB,QAAQ,EAAE,IAAI,CAAC,MAAM;YACrB,KAAK,EAAE,KAAK;SACb,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,+BAAO,GAAP;QAAA,iBA0BC;QAzBC,IAAM,aAAa,GAAG;YACpB,WAAW;YACX,WAAW;YACX,eAAe;YACf,qBAAqB;YACrB,iCAAiC;YACjC,gCAAgC;YAChC,uBAAuB;SACxB,CAAC;QAEF,IAAM,UAAU,GAAG,6CAAQ,CAAC,aAAa,CAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QAEvB,IAAM,OAAO,GAAG;YACd,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE;YAChB,QAAQ,EAAE,oCAAoC;YAC9C,KAAK,EAAE,IAAI;SACZ,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,yFAAyF;QACzF,UAAU,CAAC;YACT,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QACpD,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IA3DU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCASoC,sEAAa;OARtC,aAAa,CA6DzB;IAAD,oBAAC;CAAA;AA7DyB;;;;;;;;;;;;ACT1B,mB;;;;;;;;;;;ACAA,uDAAuD,sBAAsB,qIAAqI,mFAAmF,gCAAgC,kHAAkH,sBAAsB,gDAAgD,6BAA6B,0ZAA0Z,yBAAyB,ykE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA35B;AACD;AACN;AACJ;AAE6B;AAQpE;IAEE,oCAAoB,KAAqB,EAAU,gBAAkC,EAAU,MAAqB,EAAU,MAAc;QAAxH,UAAK,GAAL,KAAK,CAAgB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAE5I,gBAAW,GAAG,IAAI,CAAC;QAEnB,iBAAY,GAAG,IAAI,CAAC;IAJ4H,CAAC;IAOjJ,6CAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC,8BAA8B;YAClD,OAAO,CAAC,GAAG,EAAE,EAAC,qBAAqB;QACrC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,iDAAY,GAAZ,UAAa,EAAE;QAAf,iBAQC;QAPC,IAAI,CAAC,gBAAgB;aACpB,gBAAgB,CAAC,EAAE,CAAC;aACpB,SAAS,CAAC,UAAC,IAAiB;YAC3B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mDAAc,GAAd,UAAe,KAAK;QAClB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,2HAA2H;QAC3H,IAAI,CAAC,YAAY,GAAS,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAEjC,CAAC;IAED,kDAAa,GAAb,UAAc,IAAI,EAAE,WAAW,EAAE,MAAM;QAAvC,iBAQC;QAPC,IAAI,CAAC,gBAAgB;aACpB,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC;aAC/E,SAAS,CAAC;YACT,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YAC1C,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YACpC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;QACtD,CAAC,CAAC;IACJ,CAAC;IAED,oDAAe,GAAf,UAAgB,EAAE;QAAlB,iBAQC;QAPC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YAClD,mDAAmD;YACnD,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IAtDU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;;SAGpC,CAAC;yCAG2B,8DAAc,EAA4B,4EAAgB,EAAkB,wDAAa,EAAkB,sDAAM;OAFjI,0BAA0B,CAwDtC;IAAD,iCAAC;CAAA;AAxDsC;;;;;;;;;;;;ACbvC,oCAAoC,yBAAyB,GAAG,uBAAuB,0BAA0B,GAAG,oBAAoB,uBAAuB,GAAG,C;;;;;;;;;;;ACAlK,usBAAusB,mFAAmF,0BAA0B,sHAAsH,gBAAgB,oDAAoD,uBAAuB,0DAA0D,eAAe,ywE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5hC;AACP;AAEyB;AAEvB;AAO7C;IAME,8BAAoB,gBAAkC,EAAU,MAAqB,EAAU,UAAsB;QAAjG,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAe;QAAU,eAAU,GAAV,UAAU,CAAY;QAHrH,iBAAY,GAAG,IAAI,CAAC;QACpB,oBAAe,GAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;IAEqF,CAAC;IAE1H,uCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,2CAAY,GAAZ,UAAa,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,cAAc;QAAtD,iBASC;QARC,IAAI,CAAC,gBAAgB;aACpB,YAAY,CAAC,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC;aAC1D,SAAS,CAAC;YACT,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YAC1C,KAAI,CAAC,eAAe,EAAE,CAAC;YACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;QAE3D,CAAC,CAAC;IACJ,CAAC;IAED,8CAAe,GAAf;QAAA,iBAQC;QAPC,IAAI,CAAC,gBAAgB;aAClB,aAAa,EAAE;aACf,SAAS,CAAC,UAAC,IAAiB;YAC3B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAe,GAAf,UAAgB,EAAE;QAAlB,iBAOC;QANC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YAClD,mDAAmD;YACnD,KAAI,CAAC,eAAe,EAAE,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAc,GAAd,UAAe,KAAK;QAClB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,2HAA2H;QAC3H,IAAI,CAAC,YAAY,GAAS,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAEjC,CAAC;IAhDU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAOsC,4EAAgB,EAAkB,wDAAa,EAAsB,0DAAU;OAN1G,oBAAoB,CAkDhC;IAAD,2BAAC;CAAA;AAlDgC;;;;;;;;;;;;ACZjC,0BAA0B,oCAAoC,YAAY,wBAAwB,GAAG,kBAAkB,0BAA0B,GAAG,C;;;;;;;;;;;ACApJ,47CAA47C,GAAG,21E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA74C;AACD;AACN;AACF;AAEmB;AAQ5D;IAQE,wBACU,KAAqB,EACrB,MAAqB,EACrB,MAAc,EACd,YAA0B;QAH1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QATpC,iBAAY,GAAG,IAAI,CAAC;QACpB,WAAM,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;IAQX,CAAC;IAEzC,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACvE,CAAC;IAED;sDACkD;IAElD,gCAAO,GAAP,UAAQ,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS;QAAhE,iBAeC;QAdC,IAAI,CAAC,YAAY;aACd,OAAO,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC;aACzE,SAAS,CACR,UAAC,IAAI;YACH,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,8BAA8B,CAAC;YACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YAC5B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;QACrD,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACN,CAAC;IAED,8BAAK,GAAL,UAAM,KAAK,EAAE,QAAQ;QAArB,iBAgBC;QAfC,IAAI,CAAC,YAAY;aACd,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC;aAC1B,SAAS,CAAC,UAAC,IAAU;YACpB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACvB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC/D,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;YAC1C,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,CAAC;QAClD,CAAC,EACC,UAAC,KAAK;YACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF;IACL,CAAC;IAED,uCAAc,GAAd,UAAe,KAAK;QAClB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,2HAA2H;QAC3H,IAAI,CAAC,YAAY,GAAS,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAEjC,CAAC;IA9DU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAUiB,8DAAc;YACb,wDAAa;YACb,sDAAM;YACA,oEAAY;OAZzB,cAAc,CA+D1B;IAAD,qBAAC;CAAA;AA/D0B;;;;;;;;;;;;ACb3B,mB;;;;;;;;;;;ACAA,8FAA8F,MAAM,mVAAmV,4DAA4D,wB;;;;;;;;;;;;;;;;;;;;;;;;ACAjc;AAQlD;IAiBE;QAhBA,OAAE,GAAG,IAAI,CAAC;QAEV,aAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;IAcP,CAAC;IAZjB,+BAAG,GAAH,UAAI,IAAW;QACb,IAAG,IAAI,KAAI,EAAE,EAAE;YACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5B;IACH,CAAC;IAED,iCAAK,GAAL;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAKD,oCAAQ,GAAR;IACA,CAAC;IApBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,iBAAiB,CAsB7B;IAAD,wBAAC;CAAA;AAtB6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPa;AACW;AACR;AACH;AAG3C;IAEI,mBACY,MAAc,EACd,WAAwB,EACxB,MAAqB;QAFrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEtC,+BAAW,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE;YACpC,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;QAE7D,OAAO,KAAK,CAAC;IACjB,CAAC;IAhBQ,SAAS;QADrB,gEAAU,EAAE;yCAIW,sDAAM;YACD,0DAAW;YAChB,wDAAa;OALxB,SAAS,CAkBrB;IAAD,gBAAC;CAAA;AAlBqB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPqB;AACF;AAGzC;IACI;IAAgB,CAAC;IAEjB,4CAAsB,GAAtB,UAAuB,KAAa;QAChC,IAAM,OAAO,GAAG,uCAAU,CAAC,KAAK,CAAC,CAAC;QAElC,IAAI,OAAO,CAAC,GAAG,KAAK,SAAS;YAAE,OAAO,IAAI,CAAC;QAE3C,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,oCAAc,GAAd,UAAe,KAAc;QACzB,IAAI,CAAC,KAAK;YAAE,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK;YAAE,OAAO,IAAI,CAAC;QAExB,IAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,IAAI,KAAK,SAAS;YAAE,OAAO,KAAK,CAAC;QACrC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;IACpD,CAAC;IApBQ,WAAW;QADvB,gEAAU,EAAE;;OACA,WAAW,CAsBvB;IAAD,kBAAC;CAAA;AAtBuB;;;;;;;;;;;;;;;;;;;;;;;;;;ACJmB;AACO;AAKlD;IAIE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,QAAG,GAAG,2BAA2B,CAAC;IAEM,CAAC;IAEzC,wCAAa,GAAb;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,mBAAgB,CAAC,CAAC;IACpD,CAAC;IAED,2CAAgB,GAAhB,UAAiB,EAAE;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,uBAAkB,EAAI,CAAC,CAAC;IAC1D,CAAC;IAED,uCAAY,GAAZ,UAAa,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,cAAc;QACpD,IAAM,SAAS,GAAG,IAAI,QAAQ,EAAE,CAAC;QACjC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC/B,SAAS,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAC7C,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACnC,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAE,cAAc,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;QAExE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,oBAAiB,EAAE,SAAS,CAAC,CAAC;IACjE,CAAC;IAED,0CAAe,GAAf,UAAgB,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,cAAc;QAC3D,IAAM,SAAS,GAAG,IAAI,QAAQ,EAAE,CAAC;QACjC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC3B,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC/B,SAAS,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAC7C,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACnC,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAE,cAAc,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;QAExE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,yBAAoB,EAAI,EAAE,SAAS,CAAC,CAAC;IACxE,CAAC;IAED,0CAAe,GAAf,UAAgB,EAAE;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,yBAAoB,EAAI,CAAC,CAAC;IAC5D,CAAC;IAvCU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAJzB,gBAAgB,CA0C5B;IAAD,uBAAC;CAAA;AA1C4B;;;;;;;;;;;;;;;;;;;;;;;;;;ACNc;AACO;AAKlD;IAIE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,QAAG,GAAG,2BAA2B,CAAC;IAEM,CAAC;IAEzC,8BAAO,GAAP,UAAQ,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS;QAC9D,0FAA0F;QAC1F,2EAA2E;QAE3E,IAAM,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;QAEpD,iBAAiB;QACjB,oBAAoB;QACpB,0BAA0B;QAC1B,0BAA0B;QAC1B,sBAAsB;QACtB,8BAA8B;QAC9B,IAAI;QAEJ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,YAAS,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,gCAAS,GAAT,UAAU,KAAK,EAAE,QAAQ;QACvB,IAAM,IAAI,GAAG;YACX,OAAO,EAAE,KAAK;YACd,UAAU,EAAE,QAAQ;SACrB;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,WAAQ,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,iCAAU,GAAV,UAAW,EAAE;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,oBAAe,EAAI,CAAC,CAAC;IACvD,CAAC;IAED,qCAAc,GAAd;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,OAAO,CAAC;QACZ,IAAI,KAAK,EAAE;YACT,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC5B;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IArDU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAJzB,YAAY,CAuDxB;IAAD,mBAAC;CAAA;AAvDwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNkB;AACJ;AAGvC;IAGE;QACE,IAAI,CAAC,MAAM,GAAG,6CAAE,CAAC,2BAA2B,CAAC,CAAC;IAChD,CAAC;IAED,0BAAE,GAAF,UAAG,SAAc,EAAE,QAAa;QAC5B,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,IAAS;gBAC1C,QAAQ,CAAC,IAAI,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAAA,CAAC;IAEJ,4BAAI,GAAJ,UAAK,SAAc,EAAE,IAAS;QAC1B,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SACnC;IACH,CAAC;IAAA,CAAC;IAEJ,sCAAc,GAAd,UAAe,SAAc;QACzB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;SACvC;IACH,CAAC;IAAA,CAAC;IAzBO,aAAa;QADzB,gEAAU,EAAE;;OACA,aAAa,CA2BzB;IAAD,oBAAC;CAAA;AA3ByB;;;;;;;;;;;;;ACJ1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXpC,e","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TodoListComponent } from './components/todo-list/todo-list.component';\nimport { DbCharacterComponent } from './components/db-character/db-character.component';\nimport { DbCharacterDetailComponent } from './components/db-character-detail/db-character-detail.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthGuard } from './services/auth.guard';\nimport { ChatComponent } from 'src/app/components/chat/chat.component';\n\n\nconst routes: Routes = [\n\n  {\n    path: '',\n    redirectTo: 'todo-list',\n    pathMatch: 'full'\n  },\n\n  {\n    path: 'todo-list',\n    component: TodoListComponent,\n    canActivate: [AuthGuard]\n  },\n\n  {\n    path: 'dbz',\n    component: DbCharacterComponent\n  },\n\n  {\n    path: 'db-character/:id',\n    component: DbCharacterDetailComponent\n  },\n\n  {\n    path: 'signup',\n    component: LoginComponent\n  },\n\n  {\n    path: 'chat',\n    component: ChatComponent\n  }\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './components/app-component/app.component';\nimport { TodoListComponent } from './components/todo-list/todo-list.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DbCharacterComponent } from './components/db-character/db-character.component';\nimport { CharacterService } from './services/character.service';\nimport { DbCharacterDetailComponent } from './components/db-character-detail/db-character-detail.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FilterPipeModule } from 'ngx-filter-pipe';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthGuard } from './services/auth.guard';\nimport { AuthService } from './services/auth.services';\nimport { ChatComponent } from './components/chat/chat.component';\nimport { SocketService } from './services/socket.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoListComponent,\n    DbCharacterComponent,\n    DbCharacterDetailComponent,\n    LoginComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    FilterPipeModule,\n  ],\n  providers: [CharacterService, AuthGuard, AuthService, SocketService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"form-group\\\">\\n    <h1>DB Character App</h1>\\n    <!--<pre>\\n      {{tokenInfo | json}}\\n    </pre>\\n    <div>{{tokenInfo.username}}</div>\\n    <div>{{tokenInfo.gender}}</div>  -->\\n    <ul class=\\\"nav nav-pills\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/dbz\\\" routerLinkActive=\\\"active\\\" href=\\\"#\\\">Dragon Ball</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/todo-list\\\" routerLinkActive=\\\"active\\\" href=\\\"#\\\">To Do List</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/signup\\\" routerLinkActive=\\\"active\\\" href=\\\"#\\\">Sign Up/Login</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/chat\\\" routerLinkActive=\\\"active\\\" href=\\\"#\\\">Chat</a>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { LoginService } from '../../services/login.service';\nimport { User } from '../../user.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  user: User;\n\n  constructor(private loginService: LoginService) { }\n\n  title = 'Angular Sandbox';\n\n\n  tokenInfo = this.loginService.getUserDetails();\n    \n\n}\n","module.exports = \".chat-window {\\n    margin: 0;\\n    padding: 0;\\n    width: 100%;\\n    height: 100%;\\n  }\\n  \\n  .chat-window .col-xs-12.col-md-12 {\\n    padding: 0;\\n    height: 100%;\\n  }\\n  \\n  /* line 13, ../sass/components/chat-window.scss */\\n  \\n  .chat-window .panel {\\n    border: 0;\\n    border-radius: 5px 5px 0 0;\\n    margin-bottom: 0;\\n    height: 100%;\\n  }\\n  \\n  /* line 3, ../sass/components/chat-top-bar.scss */\\n  \\n  .chat-top-bar {\\n    background: #666;\\n    color: #fff;\\n    overflow: hidden;\\n    padding: 10px;\\n    position: relative;\\n    height: 70px;\\n    max-height: 70px;\\n    border-radius: 0;\\n  }\\n  \\n  /* line 13, ../sass/components/chat-top-bar.scss */\\n  \\n  .chat-top-bar .icon-minim {\\n    padding: 2px 10px;\\n  }\\n  \\n  /* line 3, ../sass/components/chat-bottom-bar.scss */\\n  \\n  .chat-bottom-bar {\\n    overflow: hidden;\\n    padding: 10px;\\n    position: relative;\\n    height: 70px;\\n    max-height: 70px;\\n  }\\n  \\n  /* line 10, ../sass/components/chat-bottom-bar.scss */\\n  \\n  .chat-bottom-bar .icon-minim {\\n    padding: 2px 10px;\\n  }\\n  \\n  /* line 14, ../sass/components/chat-bottom-bar.scss */\\n  \\n  .chat-bottom-bar input {\\n    height: calc(70px - 30px);\\n  }\\n  \\n  /* line 4, ../sass/components/chat-msg-container.scss */\\n  \\n  .msg-container-base {\\n    background: #e5e5e5;\\n    margin: 0;\\n    height: calc(100% - 140px);\\n    overflow-x: hidden;\\n    padding: 0 10px 10px;\\n  }\\n  \\n  /* line 11, ../sass/components/chat-msg-container.scss */\\n  \\n  .msg-container-base::-webkit-scrollbar-track {\\n    background-color: #f5f5f5;\\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\\n  }\\n  \\n  /* line 16, ../sass/components/chat-msg-container.scss */\\n  \\n  .msg-container-base::-webkit-scrollbar {\\n    background-color: #f5f5f5;\\n    width: 12px;\\n  }\\n  \\n  /* line 21, ../sass/components/chat-msg-container.scss */\\n  \\n  .msg-container-base::-webkit-scrollbar-thumb {\\n    background-color: #555;\\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\\n  }\\n  \\n  /* line 26, ../sass/components/chat-msg-container.scss */\\n  \\n  .msg-container-base {\\n      min-height: 200px;\\n  }\\n  \\n  .msg-container-base .msg-container {\\n    display: flex;\\n    overflow: hidden;\\n    padding: 10px;\\n  }\\n  \\n  /* line 2, ../sass/components/chat-msg.scss */\\n  \\n  .chat-msg {\\n    background: #fff;\\n    border-radius: 2px;\\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\\n    max-width: 100%;\\n    padding: 10px;\\n  }\\n  \\n  /* line 9, ../sass/components/chat-msg.scss */\\n  \\n  .chat-msg p {\\n    font-size: 15px;\\n    margin: 0 0 .2rem 10px;\\n  }\\n  \\n  /* line 14, ../sass/components/chat-msg.scss */\\n  \\n  .chat-msg time {\\n    color: #ccc;\\n    font-size: 11px;\\n  }\\n  \\n  /* line 19, ../sass/components/chat-msg.scss */\\n  \\n  .chat-msg .chat-msg-author {\\n    display: block;\\n  }\\n  \\n  /* line 23, ../sass/components/chat-msg.scss */\\n  \\n  .chat-msg .chat-msg-received {\\n    margin-right: 0;\\n    padding-bottom: 20px;\\n  }\\n  \\n  /* line 28, ../sass/components/chat-msg.scss */\\n  \\n  .chat-msg.chat-msg-sent {\\n    margin-right: 0;\\n    padding-bottom: 20px;\\n  }\\n  \\n  /* line 32, ../sass/components/chat-msg.scss */\\n  \\n  .chat-msg.chat-msg-sent .chat-msg-author {\\n    text-align: right;\\n  }\\n  \\n  /* line 36, ../sass/components/chat-msg.scss */\\n  \\n  .chat-msg.chat-msg-sent time {\\n    float: right;\\n  }\\n  \\n  .chat-msg .profile {\\n    height: 50px;\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Welcome to the Chat</h1>\\n</div>\\n\\n<!-- ngSubmit, ngModel, ngFor -->\\n<div class=\\\"container\\\">\\n<div class=\\\"row chat-window col-xs-5 col-md-12\\\">\\n  <div class=\\\"col-xs-12 col-md-12\\\">\\n      <div class=\\\"panel\\\">\\n          <div class=\\\"panel-heading chat-top-bar\\\">\\n              <div class=\\\"col-md-8 col-xs-8\\\">\\n                  <h3 class=\\\"panel-title\\\">Start a conversation</h3>\\n              </div>\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n              <div class=\\\"msg-container-base\\\">\\n                  <div class=\\\"row msg-container\\\" *ngFor=\\\"let message of messages\\\">\\n                      <div class=\\\"col-md-12 col-xs-12\\\">\\n                          <div class=\\\"chat-msg\\\"\\n                                  [ngClass]=\\\"{'chat-msg-sent': selfAuthored, 'chat-msg-recieved': !selfAuthored}\\\">\\n                              <img *ngIf=\\\"message.imageUrl\\\"\\n                                        class=\\\"profile\\\"\\n                                        [ngClass]=\\\"{'pull-right': selfAuthored, 'pull-left': !selfAuthored}\\\"\\n                                        [src]=\\\"message.imageUrl\\\" />\\n                              <p>{{ message.text }}</p>\\n                              <div class=\\\"chat-msg-author\\\">\\n                                  <strong>{{ message.username }}</strong>&nbsp;\\n                                  <span class=\\\"time\\\">Sent at: {{ message.date | date: 'shortTime' }}</span>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"chat-bottom-bar\\\">\\n                  <form style=\\\"display:inherit\\\" (ngSubmit)=\\\"sendMessage()\\\">\\n                      <div class=\\\"input-group\\\" >\\n                          <input type=\\\"text\\\"\\n                                    class=\\\"form-control input-sm chat-input\\\"\\n                                    placeholder=\\\"Enter message\\\"\\n                                    name= \\\"messageText\\\"\\n                                    [(ngModel)]=\\\"messageText\\\" />\\n                          <span class=\\\"input-group-btn\\\">\\n                          <input type=\\\"submit\\\" class=\\\"btn btn-sm chat-submit-button\\\" />\\n                      </span>\\n                      </div>\\n                  </form>\\n              </div>\\n          </div>\\n      </div>\\n   </div>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../../services/socket.service';\nimport * as _ from \"lodash\";\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  messageText: string;\n  messages: Array<any>;\n  avatar: string = 'https://api.adorable.io/avatars/30/abott@adorable.png';\n  selfAuthored: boolean = false;\n  botMessage: string;\n\n\n  constructor(private _socketService: SocketService) { }\n\n  ngOnInit() {\n    this.messages = new Array();\n    \n        this._socketService.on('message-received', (msg: any) => {\n          this.messages.push(msg);\n          console.log(msg);\n          console.log(this.messages);\n        });\n  }\n\n  sendMessage() {\n    const message = {\n      text: this.messageText,\n      date: Date.now(),\n      imageUrl: this.avatar,\n      isBot: false\n    };\n    console.log(message);\n    this._socketService.emit('send-message', message);\n    this.messageText = '';\n    this.chatBot();\n  }\n\n  chatBot() {\n    const responseArray = [\n      'GGWWWRGHH',\n      'GGWWWRGHH',\n      'AAARARRRGWWWH',\n      'WWWWWWWGGGGHHHRRRRW',\n      'WAGRRRRWWGAHHHHWWWRRGGAWWWWWWRR',\n      'Aaaaaarrrrr rhhhnnn gggggrrrrr',\n      'Rhhhnngggnn. Garrrrr!',\n    ];\n\n    const botMessage = _.sample(responseArray);\n    console.log(botMessage)\n\n    const message = {\n      text: botMessage,\n      date: Date.now(),\n      imageUrl: '/src/app/images/chewbacca_icon.png',\n      isBot: true\n    };\n    \n    console.log(message);\n    //Set a timeout to give the illusion that the bot is taking time to think of a response. \n    setTimeout(() => {\n      this._socketService.emit('send-message', message);\n    }, 2000)\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <h1>{{characterDetail.name}}'s Detail Page</h1>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n                <img class=\\\"card-img-top\\\" src=\\\"http://192.168.1.161:4000/{{characterDetail.characterImage}}\\\" alt=\\\"Card image cap\\\">\\n                <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">{{characterDetail.name}}</h5>\\n                <p class=\\\"card-text\\\">{{characterDetail.description}}</p>\\n                <p *ngIf=\\\"characterDetail.isCool\\\" class=\\\"card-text\\\">This guy is cool</p>\\n                <p *ngIf=\\\"!characterDetail.isCool\\\" class=\\\"card-text\\\">This guy sucks</p>\\n                <a (click)=\\\"deleteCharacter(characterDetail._id)\\\" class=\\\"btn btn-primary\\\">Delete</a>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n        <pre>{{characterDetail | json }}</pre>\\n        <h4>Edit this character</h4>\\n            <form>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"characterName\\\">Character Name:</label>\\n                    <input [(ngModel)]=\\\"characterDetail.name\\\" id=\\\"characterName\\\" type=\\\"text\\\" name=\\\"Name\\\" class=\\\"form-control\\\">\\n                </div>\\n                \\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"description\\\">Description:</label>\\n                    <input [(ngModel)] = \\\"characterDetail.description\\\" type=\\\"text\\\" id=\\\"description\\\" name=\\\"Name\\\" class=\\\"form-control\\\">\\n                </div>\\n                \\n                <div class=\\\"form-group form-check\\\">\\n                    <div>Is this character cool?:</div>\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <input  [(ngModel)] = \\\"characterDetail.isCool\\\" type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"true\\\" value=\\\"true\\\" name=\\\"Is this character cool\\\" checked />\\n                        <label class=\\\"form-check-label\\\" for=\\\"true\\\">Yes</label>\\n                    </div>\\n    \\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <input [(ngModel)] = \\\"characterDetail.isCool\\\" type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"false\\\" value=\\\"false\\\" name=\\\"Is this character cool\\\" />\\n                        <label class=\\\"form-check-label\\\" for=\\\"false\\\">No</label>\\n                    </div>\\n                </div>\\n            \\n                <div class=\\\"custom-file\\\">\\n                <input class=\\\"custom-file-input\\\" type=\\\"file\\\" (change)=\\\"onFileSelected($event)\\\">\\n                <label class=\\\"custom-file-label\\\">Character Image</label>\\n                </div>\\n    \\n                <div class=\\\"form-group margin-top-10\\\">\\n                    <button class=\\\"btn btn-success\\\" (click)=\\\"updateDetails(characterDetail.name, characterDetail.description, characterDetail.isCool)\\\">Submit Changes</button>\\n                </div>\\n                \\n            </form>\\n        </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport {Router} from '@angular/router';\n\nimport { CharacterService } from '../../services/character.service';\nimport { Character } from '../../character.model';\n\n@Component({\n  selector: 'app-db-character-detail',\n  templateUrl: './db-character-detail.component.html',\n  styleUrls: ['./db-character-detail.component.css']\n})\nexport class DbCharacterDetailComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private characterService: CharacterService, private toastr: ToastrService, private router: Router) { }\n\n  characterID = null;\n  characterDetail: Character[];\n  selectedFile = null;\n  \n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.characterID = params['id'];\n      console.log(params) //log the entire params object\n      console.log() //log the value of id\n    });\n    this.getCharacter(this.characterID);\n  }\n\n  getCharacter(id) {\n    this.characterService\n    .getCharacterById(id)\n    .subscribe((data: Character[]) => {\n      this.characterDetail = data;\n      console.log(\"Data requested....\");\n      console.log(this.characterDetail);\n    });\n  }\n\n  onFileSelected(event) {\n    console.log(event);\n    //Always pick the first file if we ever add functionality to add multiple files, we can't use the first item in the array. \n    this.selectedFile = <File>event.target.files[0];\n    console.log(this.selectedFile);\n    \n  }\n\n  updateDetails(name, description, isCool) {\n    this.characterService\n    .updateCharacter(this.characterID, name, description, isCool, this.selectedFile)\n    .subscribe(() => {\n      console.log('character has been updated');\n      this.getCharacter(this.characterID);\n      this.toastr.info('Your Character Has Been Updated');\n    })\n  }\n\n  deleteCharacter(id) {\n    this.characterService.deleteCharacter(id).subscribe(() => {\n      //Upate the list of chracters again after deleted. \n      this.getCharacter(this.characterID);\n      console.log('character deleted');\n      this.router.navigate(['dbz']); \n      this.toastr.info('Your Character Has Been Deleted');\n    });\n  }\n\n}\n","module.exports = \".margin-right-10 {\\n    margin-right: 10px;\\n}\\n\\n.margin-bottom-10 {\\n    margin-bottom: 10px;\\n}\\n\\n.margin-top-10 {\\n    margin-top: 10px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n\\n    <div class=\\\"row form-group\\\">\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"characterFilter.name\\\" placeholder=\\\"Search for your chracter's name\\\">\\n            <div *ngIf=\\\"(characters | filterBy: characterFilter).length === 0\\\">\\n                There are no characters by that name. Why don't you add one?!\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row form-group card-group\\\">\\n        <div class=\\\"col-md-4\\\" *ngFor=\\\"let character of characters | filterBy: characterFilter\\\">\\n            <div class=\\\"card margin-bottom-10\\\" style=\\\"width: 18rem;\\\">\\n                <img class=\\\"card-img-top\\\" src=\\\"http://192.168.1.161:4000/{{character.characterImage}}\\\" alt=\\\"Card image cap\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\">{{character.name}}</h5>\\n                    <p class=\\\"card-text\\\">{{character.description}}</p>\\n                    <a routerLink=\\\"/db-character/{{character._id}}\\\" class=\\\"btn btn-primary margin-right-10\\\">Edit</a>\\n                    <a (click)=\\\"deleteCharacter(character._id)\\\" class=\\\"btn btn-primary\\\">Delete</a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <h4>Add a new character</h4>\\n            <form>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"characterName\\\">Character Name:</label>\\n                    <input [(ngModel)]=\\\"characterName\\\" id=\\\"characterName\\\" type=\\\"text\\\" name=\\\"Name\\\" class=\\\"form-control\\\">\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"description\\\">Description:</label>\\n                    <input [(ngModel)]=\\\"description\\\" type=\\\"text\\\" id=\\\"description\\\" name=\\\"Name\\\" class=\\\"form-control\\\">\\n                </div>\\n\\n                <div class=\\\"form-group form-check\\\">\\n                    <div>Is this character cool?:</div>\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <input [(ngModel)]=\\\"isCool\\\" type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"true\\\" value=\\\"true\\\" name=\\\"Is this character cool\\\"\\n                            checked />\\n                        <label class=\\\"form-check-label\\\" for=\\\"true\\\">Yes</label>\\n                    </div>\\n\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <input [(ngModel)]=\\\"isCool\\\" type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"false\\\" value=\\\"false\\\" name=\\\"Is this character cool\\\" />\\n                        <label class=\\\"form-check-label\\\" for=\\\"false\\\">No</label>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"custom-file\\\">\\n                    <input class=\\\"custom-file-input\\\" type=\\\"file\\\" (change)=\\\"onFileSelected($event)\\\">\\n                    <label class=\\\"custom-file-label\\\">Character Image</label>\\n                </div>\\n\\n                <div class=\\\"form-group margin-top-10\\\">\\n                    <button class=\\\"btn btn-success\\\" (click)=\\\"addCharacter(characterName, description, isCool)\\\">Add\\n                        Character</button>\\n                </div>\\n\\n            </form>\\n        </div>\\n    </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { CharacterService } from '../../services/character.service';\nimport { Character } from '../../character.model';\nimport { FilterPipe } from 'ngx-filter-pipe';\n\n@Component({\n  selector: 'app-db-character',\n  templateUrl: './db-character.component.html',\n  styleUrls: ['./db-character.component.css']\n})\nexport class DbCharacterComponent implements OnInit {\n\n  characters: Character[];\n  selectedFile = null;  \n  characterFilter: any = { name: '' };\n\n  constructor(private characterService: CharacterService, private toastr: ToastrService, private filterPipe: FilterPipe) { }\n\n  ngOnInit() {\n    this.fetchCharacters();\n  }\n\n  addCharacter(name, description, isCool, characterImage) {\n    this.characterService\n    .addCharacter(name, description, isCool, this.selectedFile)\n    .subscribe(() => {\n      console.log('character has been created');\n      this.fetchCharacters();\n      this.toastr.success('Your New Character Has Been Added');\n      \n    })\n  }\n\n  fetchCharacters() {\n    this.characterService\n      .getCharacters()\n      .subscribe((data: Character[]) => {\n        this.characters = data;\n        console.log(\"Data requested....\");\n        console.log(this.characters);\n      });\n  }\n\n  deleteCharacter(id) {\n    this.characterService.deleteCharacter(id).subscribe(() => {\n      //Upate the list of chracters again after deleted. \n      this.fetchCharacters();\n      console.log('character deleted');\n      this.toastr.info('Your Character Has Been Deleted');\n    });\n  }\n\n  onFileSelected(event) {\n    console.log(event);\n    //Always pick the first file if we ever add functionality to add multiple files, we can't use the first item in the array. \n    this.selectedFile = <File>event.target.files[0];\n    console.log(this.selectedFile);\n    \n  }\n\n}\n","module.exports = \".login {\\n    border-left: 2px solid grey\\n}\\n\\nselect {\\n    margin-left: 1rem;\\n}\\n\\n.custom-file {\\n    margin-bottom: 1rem;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 signup\\\">\\n            <h4>Add a new user or login</h4>\\n            <p>\\n                We're using this form for either signing up or loggin in. If you try to register a user that already\\n                exists you'll receive an error\\n            </p>\\n            <form name=\\\"signUpForm\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"email\\\">Email Address:</label>\\n                    <input [(ngModel)]=\\\"signUpEmail\\\" id=\\\"email\\\" type=\\\"text\\\" name=\\\"Name\\\" class=\\\"form-control\\\">\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"password\\\">Password:</label>\\n                    <input [(ngModel)]=\\\"signUpPassword\\\" type=\\\"password\\\" id=\\\"password\\\" name=\\\"Password\\\" class=\\\"form-control\\\">\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"username\\\">Username:</label>\\n                    <input [(ngModel)]=\\\"signUpUsername\\\" type=\\\"username\\\" id=\\\"username\\\" name=\\\"Username\\\" class=\\\"form-control\\\">\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"gender\\\">Gender:</label>\\n                    <select name=\\\"Gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"selectedGender\\\" required>\\n                        <option *ngFor=\\\"let g of gender\\\" [value]=\\\"g\\\">{{g}}</option>\\n                    </select>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <div>Sign up for our Newsletter?</div>\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <input [(ngModel)]=\\\"newsletter\\\" type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"true\\\" value=\\\"true\\\"\\n                            name=\\\"sign up for newsletter\\\" checked />\\n                        <label class=\\\"form-check-label\\\" for=\\\"true\\\">Yes</label>\\n                    </div>\\n\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <input [(ngModel)]=\\\"newsletter\\\" type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"false\\\" value=\\\"false\\\"\\n                            name=\\\"sign up for newsletter\\\" />\\n                        <label class=\\\"form-check-label\\\" for=\\\"false\\\">No</label>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"custom-file\\\">\\n                    <input class=\\\"custom-file-input\\\" type=\\\"file\\\" (change)=\\\"onFileSelected($event)\\\">\\n                    <label class=\\\"custom-file-label\\\">Avatar Image</label>\\n                </div> \\n\\n                <div class=\\\"form-group margin-top-10\\\">\\n                    <button class=\\\"btn btn-success\\\" (click)=\\\"addUser(signUpEmail, signUpPassword, signUpUsername, selectedGender, newsletter )\\\">Add\\n                        User</button>\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"col-md-6 login\\\">\\n            <h4>Login</h4>\\n            <form name=\\\"loginForm\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"email\\\">Email Address:</label>\\n                    <input [(ngModel)]=\\\"loginEmail\\\" id=\\\"email\\\" type=\\\"text\\\" name=\\\"Name\\\" class=\\\"form-control\\\">\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"password\\\">Password:</label>\\n                    <input [(ngModel)]=\\\"loginPassword\\\" type=\\\"password\\\" id=\\\"password\\\" name=\\\"Name\\\" class=\\\"form-control\\\">\\n                </div>\\n\\n                <div class=\\\"form-group margin-top-10\\\">\\n                    <button class=\\\"btn btn-success\\\" (click)=\\\"login(loginEmail, loginPassword)\\\">Login</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\nimport { LoginService } from '../../services/login.service';\nimport { User } from '../../user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  returnUrl: string;\n  user: User;\n  selectedFile = null;\n  gender = [\"Male\", \"Female\", \"Non-Binary\", \"Other\"];\n\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private toastr: ToastrService,\n    private router: Router,\n    private loginService: LoginService) { }\n\n  ngOnInit() {\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  /* TODO: Add a page where the user can delete themselves, or other users...maybe a user profile page.  \n  Something so we can use the deleteUser API call */\n\n  addUser(email, password, username, gender, newsletter, userImage) {\n    this.loginService\n      .addUser(email, password, username, gender, newsletter, this.selectedFile)\n      .subscribe(\n        (data) => {\n          this.toastr.success('Your New User Has Been Added')\n          console.log(data);\n          this.login(email, password);\n          this.toastr.success('You have now been logged in');\n        },\n        (error) => {\n          this.toastr.error(error.error.message)\n          console.log(error);\n        }\n      );\n  }\n\n  login(email, password) {\n    this.loginService\n      .loginUser(email, password)\n      .subscribe((data: User) => {\n        this.user = data;\n        console.log(this.user);\n        localStorage.setItem('token', JSON.stringify(this.user.token));\n        this.router.navigateByUrl(this.returnUrl);\n        this.toastr.success(this.user.message);\n        console.log(this.loginService.getUserDetails());\n      },\n        (error) => {\n          this.toastr.error(error.error.message)\n          console.log(error);\n        }\n      )\n  }\n\n  onFileSelected(event) {\n    console.log(event);\n    //Always pick the first file if we ever add functionality to add multiple files, we can't use the first item in the array. \n    this.selectedFile = <File>event.target.files[0];\n    console.log(this.selectedFile);\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<ul *ngIf=\\\"todoList.length > 0\\\">\\n  <li *ngFor=\\\"let item of todoList\\\">{{item}}</li>\\n</ul>\\n\\n<h4 *ngIf=\\\"todoList.length == 0\\\">Please add some items to the TO Do list</h4>\\n\\n<form name=\\\"todo-List\\\">\\n  \\n  <div>\\n    <label>Enter an item for the To Do list </label>\\n    <input name=\\\"enterTodoItem\\\" [(ngModel)] = \\\"todoListItem\\\">\\n  </div>\\n\\n  <input type=\\\"submit\\\" value=\\\"add\\\" (click)=\\\"add(todoListItem); todoListItem=''\\\">\\n\\n</form>\\n\\n<button (click)=\\\"clear();\\\">\\n  clear\\n</button>\"","import { Component, OnInit } from '@angular/core';\nimport { todoListItem } from '../../todoList';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent implements OnInit {\n  vm = this;\n\n  todoList = new Array();\n\n  add(name:string) {\n    if(name !==\"\") {\n      this.todoList.push(name);\n      console.log(this.todoList);\n    }\n  }\n\n  clear() {\n    this.todoList = [];\n  }\n\n\n  constructor() { }\n  \n  ngOnInit() {\n  }\n\n}\n","\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.services';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(\n        private router: Router,\n        private authService: AuthService,\n        private toastr: ToastrService) { }\n\n    canActivate() {\n        if (!this.authService.isTokenExpired()) {\n            return true;\n        }\n\n        this.router.navigate(['/signup']);\n        this.toastr.info('You must sign up/login to view this page');\n\n        return false;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport * as jwt_decode from 'jwt-decode';\n\n@Injectable()\nexport class AuthService {\n    constructor() { }\n\n    getTokenExpirationDate(token: string): Date {\n        const decoded = jwt_decode(token);\n\n        if (decoded.exp === undefined) return null;\n\n        const date = new Date(0);\n        date.setUTCSeconds(decoded.exp);\n        return date;\n    }\n\n    isTokenExpired(token?: string): boolean {\n        if (!token) token = localStorage.getItem('token');\n        if (!token) return true;\n\n        const date = this.getTokenExpirationDate(token);\n        if (date === undefined) return false;\n        return !(date.valueOf() > new Date().valueOf());\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n\n  uri = 'http://192.168.1.161:4000';\n\n  constructor(private http: HttpClient) { }\n\n  getCharacters() {\n    return this.http.get(`${this.uri}/getCharacters`);\n  }\n\n  getCharacterById(id) {\n    return this.http.get(`${this.uri}/getCharacters/${id}`);\n  }\n\n  addCharacter(name, description, isCool, characterImage) {\n    const character = new FormData();\n    character.append('name', name);\n    character.append('description', description);\n    character.append('isCool', isCool);\n    character.append('characterImage', characterImage, characterImage.name);\n\n    console.log(character);\n\n    return this.http.post(`${this.uri}/saveCharacters`, character);\n  }\n\n  updateCharacter(id, name, description, isCool, characterImage) {\n    const character = new FormData();\n    character.append('id', id);\n    character.append('name', name);\n    character.append('description', description);\n    character.append('isCool', isCool);\n    character.append('characterImage', characterImage, characterImage.name);\n\n    return this.http.post(`${this.uri}/updateCharacter/${id}`, character);\n  }\n\n  deleteCharacter(id) {\n    return this.http.get(`${this.uri}/deleteCharacter/${id}`);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  uri = 'http://192.168.1.161:4000';\n\n  constructor(private http: HttpClient) { }\n\n  addUser(email, password, username, gender, newsletter, userImage) {\n    //TODO: Find out why when sending data using FormData() the request returns and empty obj \n    //but doesn't return an empty obj when using the other character api calls \n\n    const user = new FormData();\n    user.append('email', email);\n    user.append('password', password);\n    user.append('username', username);\n    user.append('gender', gender);\n    user.append('newsletter', newsletter);\n    user.append('userImage', userImage, userImage.name);\n\n    // const user = {\n    //   \"email\": email,\n    //   \"password\": password,\n    //   \"username\": username,\n    //   \"gender\": gender,\n    //   \"newsletter\": newsletter,\n    // }\n\n    return this.http.post(`${this.uri}/signup`, user);\n  }\n\n  loginUser(email, password) {\n    const user = {\n      \"email\": email,\n      \"password\": password,\n    }\n\n    return this.http.post(`${this.uri}/login`, user);\n  }\n\n  deleteUser(id) {\n    return this.http.get(`${this.uri}/deleteUser/${id}`);\n  }\n\n  getUserDetails() {\n    const token = localStorage.getItem('token');\n    let payload;\n    if (token) {\n      payload = token.split('.')[1];\n      payload = window.atob(payload);\n      console.log(JSON.parse(payload));\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\n\n@Injectable()\nexport class SocketService {\n  socket: SocketIOClient.Socket;\n\n  constructor() {\n    this.socket = io('http://192.168.1.161:4000');\n  }\n\n  on(eventName: any, callback: any) {\n      if (this.socket) {\n        this.socket.on(eventName, function(data: any) {\n          callback(data);\n        });\n      }\n    };\n\n  emit(eventName: any, data: any) {\n      if (this.socket) {\n        this.socket.emit(eventName, data);\n      }\n    };\n\n  removeListener(eventName: any) {\n      if (this.socket) {\n        this.socket.removeListener(eventName);\n      }\n    };\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","/* (ignored) */"],"sourceRoot":""}